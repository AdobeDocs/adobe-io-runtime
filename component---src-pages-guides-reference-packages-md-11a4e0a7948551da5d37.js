"use strict";(self.webpackChunkadobe_io_runtime=self.webpackChunkadobe_io_runtime||[]).push([[3834],{54531:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return s}});var i=n(87462),t=n(63366),p=(n(15007),n(64983)),m=n(91515),r=["components"],d={},o={_frontmatter:d},l=m.Z;function s(e){var a=e.components,n=(0,t.Z)(e,r);return(0,p.mdx)(l,(0,i.Z)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,p.mdx)("h1",{id:"working-with-packages"},"Working with packages"),(0,p.mdx)("p",null,"Packages are a simple and yet important concept in I/O Runtime. You can use packages to handle versioning (deploy new version of your actions in a new package), create different actions with the same name within the same namespace, group together actions that are related, share actions with other parties (shared packages) and much more."),(0,p.mdx)("p",null,"You create a package running:"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre"},"aio rt:package:create my-fancy-package \n")),(0,p.mdx)("p",null,"When deleting an package, it will only work if the package is empty (no actions or triggers have been defined in it):"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre"},"aio rt:package:delete my-fancy-package\n")),(0,p.mdx)("p",null,"Another useful feature is defining default params at the package level. All the actions defined in that package will be able to read the default params. In this example a param called ",(0,p.mdx)("inlineCode",{parentName:"p"},"name")," is set, with the value ",(0,p.mdx)("inlineCode",{parentName:"p"},"some-value"),":"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre"},"$ aio rt:package:update my-fancy-package --param name some-value\n")),(0,p.mdx)("p",null,"Sharing a package (making it available to any other user of the system) is as simple as adding this flag ",(0,p.mdx)("inlineCode",{parentName:"p"},"shared"),":"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre"},"$ aio rt:package:update my-fancy-package --shared yes\n")),(0,p.mdx)("p",null,"If you want to use a shared package, you need first to bind it. In the following example, we bind ",(0,p.mdx)("inlineCode",{parentName:"p"},"my-fancy-package")," to a package called ",(0,p.mdx)("inlineCode",{parentName:"p"},"my-package"),". This enables you to invoke any action defined in the original namespace as being part of bound package."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre"},"$ aio rt:package:bind /namespace-where-package-is-defined/my-fancy-package my-package\n")),(0,p.mdx)("h2",{id:"shared-packages-and-permissions"},"Shared Packages and Permissions"),(0,p.mdx)("p",null,"Shared packages enforce ",(0,p.mdx)("inlineCode",{parentName:"p"},"execute-only")," permission for any operation that is initiated from outside the namespace owning the package. Assuming there is a package ",(0,p.mdx)("inlineCode",{parentName:"p"},"my-package")," in namespace ",(0,p.mdx)("inlineCode",{parentName:"p"},"a"),", this package is shared, and there is a namespace ",(0,p.mdx)("inlineCode",{parentName:"p"},"b")," who uses the shared package, then:"),(0,p.mdx)("ul",null,(0,p.mdx)("li",{parentName:"ul"},"Invoking ",(0,p.mdx)("inlineCode",{parentName:"li"},"my-package")," actions from namespace ",(0,p.mdx)("inlineCode",{parentName:"li"},"b")," or ",(0,p.mdx)("inlineCode",{parentName:"li"},"a")," will work"),(0,p.mdx)("li",{parentName:"ul"},"Trying to get ",(0,p.mdx)("inlineCode",{parentName:"li"},"my-package")," code or edit it (update/delete) from namespace ",(0,p.mdx)("inlineCode",{parentName:"li"},"b")," will fail"),(0,p.mdx)("li",{parentName:"ul"},"Manage ",(0,p.mdx)("inlineCode",{parentName:"li"},"my-package")," (create/read/update/delete) will only work from namespace ",(0,p.mdx)("inlineCode",{parentName:"li"},"a"))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-reference-packages-md-11a4e0a7948551da5d37.js.map
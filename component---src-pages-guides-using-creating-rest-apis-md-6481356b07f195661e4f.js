(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5610],{77493:function(e,t,n){"use strict";n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return m}});var a=n(22122),o=n(19756),r=(n(15007),n(64983)),d=n(99536),i=["components"],l={},s={_frontmatter:l},p=d.Z;function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.mdx)(p,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"creating-rest-apis"},"Creating REST APIs"),(0,r.mdx)("p",null,"You can create REST APIs from web actions you","’","ve deployed to Adobe I/O Runtime. Let","’","s assume that you","’","ve created four actions to manage CRUD operations for the ",(0,r.mdx)("inlineCode",{parentName:"p"},"pet")," entity:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"CRUD Operation"),(0,r.mdx)("th",{parentName:"tr",align:null},"Action Name"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Create"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"addPet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Read"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"getPet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Update"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"updatePet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Delete"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"deletePet"))))),(0,r.mdx)("p",null,"You can map these actions to a REST API for managing ",(0,r.mdx)("inlineCode",{parentName:"p"},"pet")," resources:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Endpoint"),(0,r.mdx)("th",{parentName:"tr",align:null},"HTTP Method"),(0,r.mdx)("th",{parentName:"tr",align:null},"Action Nam"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"/pet"),(0,r.mdx)("td",{parentName:"tr",align:null},"POST"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"addPet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"/pet"),(0,r.mdx)("td",{parentName:"tr",align:null},"GET"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"getPet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"/pet/{id}"),(0,r.mdx)("td",{parentName:"tr",align:null},"GET"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"getPet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"/pet/{id}"),(0,r.mdx)("td",{parentName:"tr",align:null},"PUT"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"updatePet"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"/pet/{id}"),(0,r.mdx)("td",{parentName:"tr",align:null},"DELETE"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"deletePet"))))),(0,r.mdx)("p",null,"Let","’","s see how you can create this API, assuming you have the web actions are already deployed/created."),(0,r.mdx)("h1",{id:"how-long-does-it-take-to-createupdate-an-api"},"How long does it take to create/update an API"),(0,r.mdx)("p",null,"When creating or updating a REST API, it can take up to 5 minutes to see the changes. "),(0,r.mdx)("h2",{id:"using-wsk-cli"},"Using wsk CLI"),(0,r.mdx)("p",null,"Using the ",(0,r.mdx)("inlineCode",{parentName:"p"},"wsk api create")," command, you create each API endpoint one-by-one. This command allows you to set a base path, path, method, and response type. We will set:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"wsk api create /pet-store /pet post createPet --response-type http\nwsk api create /pet-store /pet get getPet --response-type http\nwsk api create /pet-store /pet/{id} get getPet --response-type http\nwsk api create /pet-store /pet/{id} put updatePet --response-type http\nwsk api create /pet-store /pet/{id} delete deletePet --response-type http\n")),(0,r.mdx)("p",null,"You can quickly see the API you","’","ve defined, including the fully qualified path, by running this command:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"wsk api list /pet-store\n")),(0,r.mdx)("p",null,"Please note, that at this time ",(0,r.mdx)("inlineCode",{parentName:"p"},"wsk api list")," is not implemented. Instead, you have to use ",(0,r.mdx)("inlineCode",{parentName:"p"},"wsk api list /enter-base-path"),"."),(0,r.mdx)("p",null,"Here is an example of calling one of the endpoints:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"curl https://adobeioruntime.net:443/apis/<YOUR-NAMESPACE>/pet-store/pet/2345 -X get\n")),(0,r.mdx)("p",null,"or"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"curl https://<YOUR-NAMESPACE>.adobeioruntime.net:443/apis/pet-store/pet/2345 -X GET\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Note")," the change in the URL here in comparison to what the ",(0,r.mdx)("inlineCode",{parentName:"p"},"wsk")," returns. This is due some additional protections Runtime provides to segregate namespaces from each other when invoking web actions. The ",(0,r.mdx)("inlineCode",{parentName:"p"},"wsk")," generated link will still work but it will return a 308 redirect to your namespace's subdomain on Runtime. For a further discussion of this please see the ",(0,r.mdx)("a",{parentName:"p",href:"securing_web_actions.md"},"Securing Web Actions")," page."),(0,r.mdx)("p",null,"In the example above, the ",(0,r.mdx)("inlineCode",{parentName:"p"},"{di}")," value, 2335, will be mapped to a {payload.id}."),(0,r.mdx)("h2",{id:"using-swagger-files"},"Using Swagger files"),(0,r.mdx)("p",null,"A neat feature when working with REST APIs is the support for Swagger files. This works for creating a new REST API from scratch or, if you already used the ",(0,r.mdx)("inlineCode",{parentName:"p"},"wsk")," CLI to create one,  saving the API as a Swagger definition file that you can use later on to restore the API."),(0,r.mdx)("p",null,"Continuing the example above, if you run this command, you","’","ll create a Swagger definition file on your machine out of the pet-store API:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"wsk api get /pet-store > pet-store-swagger.json\n")),(0,r.mdx)("p",null,"Suppose that you want to restore or create the same API, maybe in some other namespace. All you have to is to run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"wsk api create --config-file pet-store-swagger.json\n")),(0,r.mdx)("p",null,"This will work as long as the actions are already created in that namespace."),(0,r.mdx)("h2",{id:"enable-cors-on-an-http-resource"},"Enable CORS on an HTTP Resource"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS"},"CORS")," headers can be controlled in two ways: statically, or dynamically."),(0,r.mdx)("h3",{id:"static-cors-response-with-openapi"},"Static CORS Response with OpenAPI"),(0,r.mdx)("p",null,"If the returned CORS headers can be static, no code is necesary. The REST APIs can be configured in OpenAPI 2.0 format, by defining the ",(0,r.mdx)("inlineCode",{parentName:"p"},"options")," method. The following snippet illustrates how to configure CORS headers:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'"paths": {\n    "/test": {\n      "options": {\n        "responses": {\n          "204": {\n            "description": "Default CORS response",\n            "headers": {\n              "Access-Control-Allow-Origin": {\n                "type": "string",\n                "description": "Which origin can invoke the /test API\\n",\n                "default": "https://xyz.example.com"\n              },\n              "Access-Control-Allow-Methods": {\n                "type": "string",\n                "description": "Which methods are allowed\\n",\n                "default": "GET, POST, PUT"\n              }\n            }\n          }\n        }\n      }\n    }\n}\n')),(0,r.mdx)("p",null,"Once the ",(0,r.mdx)("inlineCode",{parentName:"p"},"options")," block is added to any HTTP resource, the system will respond with the configured headers, and their corresponding ",(0,r.mdx)("inlineCode",{parentName:"p"},"default")," values. In this example the response will be:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"}," HTTP/1.1 204 No Content\n Access-Control-Allow-Methods: GET, POST, PUT\n Access-Control-Allow-Origin: https://xyz.example.com\n\n")),(0,r.mdx)("h4",{id:"dynamic-cors-response-with-custom-actions"},"Dynamic CORS Response with Custom Actions"),(0,r.mdx)("p",null,"The CORS headers can also be returned by a dedicated function, which must be configured to handle the ",(0,r.mdx)("inlineCode",{parentName:"p"},"options")," HTTP Method. It works in the same fashion as the other HTTP Methods like ",(0,r.mdx)("inlineCode",{parentName:"p"},"GET"),", or ",(0,r.mdx)("inlineCode",{parentName:"p"},"POST"),"."),(0,r.mdx)("p",null,"The code bellow demonstrates an action that returns a CORS response:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},'// save it as cors-action.js\nfunction main(params) {\n  return {\n    statusCode: 204,\n    headers: {\n      "Access-Control-Allow-Origin": "https://xyz.example.com",\n      "Access-Control-Allow-Methods": "GET, POST, PUT"\n    }\n  }\n}\n')),(0,r.mdx)("p",null,"The web action must be created and configured for the CORS request:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"wsk action create handleCorsRequest ./cors-action.js --web true -a web-custom-options true\n\nwsk api create /pet-store /pet options handleCorsRequest --response-type http\n")),(0,r.mdx)("p",null,"To test the CORS request get the URL of the action, and invoke it:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"wsk api list /pet-store\n# get the URL for the options action and invoke it\ncurl -i -X OPTIONS https://adobeioruntime.net/...\n# it should return\n HTTP/1.1 204 No Content\n Access-Control-Allow-Methods: GET, POST, PUT\n Access-Control-Allow-Origin: https://xyz.example.com\n")),(0,r.mdx)("h2",{id:"securing-the-api-endpoints"},"Securing the API endpoints"),(0,r.mdx)("p",null,"You secure an API the same way you","’","d do it for web actions. You can read more about this on the ",(0,r.mdx)("a",{parentName:"p",href:"securing_web_actions.md"},"Securing Web Actions")," page."),(0,r.mdx)("p",null,"Once you","’","ve enabled basic authentication for an action, you","’","d have to pass the ",(0,r.mdx)("inlineCode",{parentName:"p"},"X-Require-Whisk-Auth")," header and the secret you chose when making an API call. "))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-using-creating-rest-apis-md-6481356b07f195661e4f.js.map
{"version":3,"file":"component---src-pages-guides-tools-wsk-install-md-377c03cbaecb26bc107f.js","mappings":"qRAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,0BAAwB,2BAEhCA,EAAAA,EAAAA,KAAA,8CAAwCA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAClD,KAAQ,8DAA4D,+BAChC,iGACxCH,EAAAA,EAAAA,KAAA,iPAEAA,EAAAA,EAAAA,KAAA,gHAA0GA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACpH,KAAQ,yEAAuE,2BAC/C,uBACpCH,EAAAA,EAAAA,KAAA,sCAAgCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,uHAAuHH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,iIAAiIH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,WACjbH,EAAAA,EAAAA,KAAA,uCAAmCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,cAAcH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,8LAA8LH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,sHACxYH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OAAK,iFAI3BH,EAAAA,EAAAA,KAAA,0HACAA,EAAAA,EAAAA,KAAA,uKACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OAAK,wJAE3BH,EAAAA,EAAAA,KAAA,uEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OAAK,gBAE3BH,EAAAA,EAAAA,KAAA,mEAGJ,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://adobe-io-runtime/./src/pages/guides/tools/wsk_install.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adobe-io-runtime/adobe-io-runtime/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"setting-up-the-wsk-cli\"\n    }}>{`Setting up the wsk CLI`}</h1>\n    <p>{`Download the executable from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apache/incubator-openwhisk-cli/releases\"\n      }}>{`OpenWhisk GitHub repository`}</a>{`. Choose the version that matches your operating system and download the compressed archive.`}</p>\n    <p>{`Extract the executable from the compressed archive and place it in a folder of your choice.\nAdd the folder into which you placed the executable to your PATH environment variable. This enables you to call the CLI from anywhere.`}</p>\n    <p>{`Alternatively, you can choose to build OpenWhisk locally; this produces a copy of the CLI. See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apache/incubator-openwhisk/blob/master/docs/cli.md\"\n      }}>{`OpenWhisk documentation`}</a>{` for instructions.`}</p>\n    <p>{`The OpenWhisk CLI uses a `}<inlineCode parentName=\"p\">{`.wskprops`}</inlineCode>{` file to configure the commands to work with a specific namespace: this means that at any given point in time, the `}<inlineCode parentName=\"p\">{`wsk`}</inlineCode>{` CLI will talk with only with one namespace. If you want to use a different namespace, you have to change the content of the `}<inlineCode parentName=\"p\">{`.wskprops`}</inlineCode>{` file.`}</p>\n    <p>{`If you`}{`’`}{`re using the `}<inlineCode parentName=\"p\">{`aio`}</inlineCode>{` CLI, the `}<inlineCode parentName=\"p\">{`.wskprops`}</inlineCode>{` file will be configured automatically for whatever integration you select. You can also use the OpenWhisk CLI by itself, but it requires manual configuration. You will have to create a `}<inlineCode parentName=\"p\">{`.wskprops`}</inlineCode>{` file containing your authorization key, your namespace, and the path to the Runtime API host. Here’s an example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`AUTH=<Your UUID>\nAPIHOST=adobeioruntime.net \nNAMESPACE=<Your namespace>\n`}</code></pre>\n    <p>{`You place this file in your user folder, where the CLI can access it to set those properties when it starts.`}</p>\n    <p>{`An alternative method to configure your instance of the CLI is to do it through a CLI command. Open a command-line window and type the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`wsk property set --apihost adobeioruntime.net  --auth  <Your auth code from the Runtime team>  namespace  <Your namespace from the Runtime team>\n`}</code></pre>\n    <p>{`Once you`}{`’`}{`ve configured the CLI, you should test it:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`wsk list\n`}</code></pre>\n    <p>{`This should list the content of the current namespace.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}
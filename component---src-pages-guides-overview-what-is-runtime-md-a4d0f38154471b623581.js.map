{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/overview/what_is_runtime.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,4BADR,8BAGA,0jBACA,eACE,GAAM,yBADR,0BAGA,yJAA0I,eAAIC,WAAW,KAAf,SAA1I,4GAAuR,eAAIA,WAAW,KAAf,OAAvR,uBACA,mBAAG,gBAAKA,WAAW,IACf,IAAO,mEACP,IAAO,gCACP,MAAS,mCACF,eAAIA,WAAW,MAJ1B,MAKF,eAAIA,WAAW,KAAf,mCACE,0FACA,oBACE,eAAIA,WAAW,MAAf,YACA,eAAIA,WAAW,MAAf,WACA,eAAIA,WAAW,MAAf,aACA,eAAIA,WAAW,MAAf,UACA,eAAIA,WAAW,MAAf,cACA,eAAIA,WAAW,MAAf,iBACA,eAAIA,WAAW,MAAf,cAEF,0BAAW,cAAGA,WAAW,IACrB,KAAQ,eADD,8BAAX,2BAOJJ,EAAWK,gBAAiB","file":"component---src-pages-guides-overview-what-is-runtime-md-a4d0f38154471b623581.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-io-runtime/adobe-io-runtime/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"what-is-adobe-io-runtime\"\n    }}>{`What is Adobe I/O Runtime`}</h1>\n    <p>{`The idea of serverless computing is to abstract the server infrastructure from the developer, so developers can concentrate on application logic, not configuring and deploying servers. With a serverless computing platform like Adobe I/O Runtime, those portions of your application logic that need to be accessible from the Internet, and would normally be executed on a traditionally hosted server or a cloud service such as AWS or Azure, can be hosted on Runtime as on-demand functions and executed as needed via HTTP requests or Adobe I/O Events.`}</p>\n    <h2 {...{\n      \"id\": \"the-programming-model\"\n    }}>{`The programming model`}</h2>\n    <p>{`On Adobe I/O Runtime, code is executed on demand in response to Adobe I/O Events or HTTP requests controlled by conditional logic (`}<em parentName=\"p\">{`rules`}</em>{`). Runtime provides a programming environment supported by a REST API-based command line interface (the `}<em parentName=\"p\">{`CLI`}</em>{`) and other tools.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/adobe-io-runtime/90773122f62fd2f73c8bc81a7843b0d8/intro_f01.svg\",\n        \"alt\": \"The event processing pipeline\",\n        \"title\": \"The event processing pipeline\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<em parentName=\"p\">{`The event processing pipeline`}</em></p>\n    <p>{`The Runtime programming model makes use of the following entities: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Actions`}</li>\n      <li parentName=\"ul\">{`Events`}</li>\n      <li parentName=\"ul\">{`Triggers`}</li>\n      <li parentName=\"ul\">{`Rules`}</li>\n      <li parentName=\"ul\">{`Sequences`}</li>\n      <li parentName=\"ul\">{`Compositions`}</li>\n      <li parentName=\"ul\">{`Packages`}</li>\n    </ul>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"entities.md\"\n      }}>{`Adobe I/O Runtime Entities`}</a>{` for more information.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
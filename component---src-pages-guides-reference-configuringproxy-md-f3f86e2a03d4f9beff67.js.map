{"version":3,"file":"component---src-pages-guides-reference-configuringproxy-md-f3f86e2a03d4f9beff67.js","mappings":"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","sources":["webpack://adobe-io-runtime/./src/pages/guides/reference/configuringproxy.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adobe-io-runtime/adobe-io-runtime/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"configuring-a-secure-proxy\"\n    }}>{`Configuring a Secure Proxy`}</h2>\n    <p>{`Runtime does not expose egress IPs due to security reasons. If a customer needs a way to secure the communication with their downstream services using IP whitelisting, they can use a proxy in between their backend service and I/O Runtime.`}</p>\n    <p>{`This can be done by the addition of a proxy component (in this example, an AWS EC2 instance running nginx). The proxy component will have a fixed IP address, therefore enabling the use of an IP allowlist to secure your backend service. The communication between I/O Runtime and the proxy component will be secured via mutual TLS (mTLS) communication. `}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1140px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"19.375%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/5530d/configure-proxy.webp 320w\", \"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/0c8fb/configure-proxy.webp 640w\", \"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/b2cd5/configure-proxy.webp 1140w\"],\n            \"sizes\": \"(max-width: 1140px) 100vw, 1140px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/dd4a7/configure-proxy.png 320w\", \"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/0f09e/configure-proxy.png 640w\", \"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/dc896/configure-proxy.png 1140w\"],\n            \"sizes\": \"(max-width: 1140px) 100vw, 1140px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/adobe-io-runtime/static/78ab0c5d6215322154a4bf8d92019fff/dc896/configure-proxy.png\",\n            \"alt\": \"configure proxy\",\n            \"title\": \"configure proxy\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The following steps outline how to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Configure the NGINX proxy component to support mutual TLS (mTLS)`}</li>\n      <li parentName=\"ul\">{`Configure an AppBuilder action to use mTLS to securely communicate with the proxy component`}</li>\n    </ul>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Prerequisite:`}</strong>{` An EC2 instance with NGINX installed. The `}<a parentName=\"em\" {...{\n          \"href\": \"https://docs.nginx.com/nginx/deployment-guides/amazon-web-services/ec2-instances-for-nginx/\"\n        }}>{`official NGINX documentation`}</a>{` has more information.`}</em></p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify SSH connectivity to the EC2 instance. (screenshot of terminal/template cmd)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ssh -i <your-key.pem> ec2-user@<EC2-IPAddress>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Generate certificates needed for mTLS (link out to example-mtls project for generating secrets)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Generate `}<strong parentName=\"li\">{`mtls_server.key/.crt`}</strong>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`openssl req -x509 -nodes -days 3650 -newkey rsa:4096 -keyout mtls_server.key -out mtls_server.crt\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">{`Generate `}<strong parentName=\"li\">{`mtls_client.key/.crt`}</strong>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`openssl req -x509 -nodes -days 3650 -newkey rsa:4096 -keyout mtls_client.key -out mtls_client.crt\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use the referenced file `}<inlineCode parentName=\"p\">{`mtls.conf.example`}</inlineCode>{` and replace `}<inlineCode parentName=\"p\">{`DESTINATION_HOST`}</inlineCode>{` with the final destination you would like to proxy to. For example, if your target host is `}<inlineCode parentName=\"p\">{`api.myhost.com`}</inlineCode>{` you would search for the following line`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`proxy_pass https://DESTINATION_HOST\n`}</code></pre>\n        <p parentName=\"li\">{`and replace it such that it looks like `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`proxy_pass https://api.myhost.com\n`}</code></pre>\n        <p parentName=\"li\">{`Save the resulting file locally as `}<inlineCode parentName=\"p\">{`mtls.conf`}</inlineCode>{` (in the same folder as your certificates).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy sample NGINX configuration to EC2 instance with updated placeholder details. (terminal screenshots for `}<inlineCode parentName=\"p\">{`scp`}</inlineCode>{` cmds)`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`First copy files to home folder`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`scp -i <your-key.pem> mtls_server.key mtls_server.crt mtls_client.key mtls_client.crt mtls.conf ec2-user@<EC2-IPAddress>:~/\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">{`Then move them into place (while connected via SSH to the ec2 instance)`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`sudo mv ~/mtls* /etc/nginx/conf.d/\n`}</code></pre>\n          </li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Restart `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify you can connect via curl locally from the ec2 instance`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`$ curl -ki --cert /etc/nginx/conf.d/mtls_client.crt --key /etc/nginx/conf.d/mtls_client.key https://localhost/\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`(Optional)`}</em>{` `}<a parentName=\"li\" {...{\n              \"href\": \"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html\"\n            }}>{`Create an AMI`}</a>{` from your running AWS instance in order to preserve your changes.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your AppBuilder app, you will need to make changes to wire the mTLS client key and certificate`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`.env`}</inlineCode>{`:`}</strong>{` Add the following lines with paths to your mtls client certificate files.`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`## Support mTLS\n__AIO_MTLS_CERT=(cat /path/to/mtls_client.crt)\n__AIO_MTLS_KEY=(cat /path/to/mtls_client.key)\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`app.config.yaml`}</inlineCode>{`:`}</strong>{` Add the following default parameters pointing to the environment variables.`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`inputs:\n    __AIO_MTLS_CERT: $__AIO_MTLS_CERT\n    __AIO_MTLS_KEY: $__AIO_MTLS_KEY\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your action code, you can reference these environment variables when making an HTTP request to the proxy component (replace the `}<inlineCode parentName=\"p\">{`PROXY_ENDPOINT`}</inlineCode>{` with your AWS EC2 hostname/IP)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`// configure the client side of mTLS\nconst options = {\n    cert: params.__AIO_MTLS_CERT,\n    key:  params.__AIO_MTLS_KEY,\n    rejectUnauthorized: false, // in test, if you're working with self-signed certificates\n    keepAlive: false, // switch to true if you're making a lot of calls from this client\n};\n\nconst sslConfiguredAgent = new https.Agent(options);\n\ntry {\n    // Replace the \\`PROXY_ENDPOINT\\` with your AWS EC2 hostname/IP\n    const url = \"https://PROXY_ENDPOINT/path/to/resource?param=value\"\n\n    console.log(\\`Making call to: [\\${url}]\\`);\n    // make the request just as you would normally ...\n    const response = await fetch(url, {\n    agent: sslConfiguredAgent, // ... but add the agent we initialised\n    });\n\n    const responseBody = await response.text();\n\n    // handle the response as you would see fit\n    console.log(responseBody);\n    return { statusCode: 200, body: { resp: responseBody }};\n} catch (error) {\n    // return the error\n    console.log(error);\n    return { statusCode: 418, body: { error: error }};\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Deploy your application to I/O Runtime via `}<inlineCode parentName=\"p\">{`aio app deploy`}</inlineCode>{` and test out the setup by invoking your action.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}
{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting-started/deploy.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"mappings":"4OAUsBA,E,wEAFTC,EAAe,GAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kDADR,oDAGA,oLAAqK,uBAAYC,WAAW,KAAvB,YAArK,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,iFAML,SAACV,EAAD,CAAaW,MAAM,OAAOF,QAAQ,iBAClC,4EAA6D,cAAGC,WAAW,IACvE,KAAQ,4BACR,MAAS,gBAFgD,+BAA7D,uCAIA,mLACA,mBAAG,uBAAYA,WAAW,KAAvB,sCACH,iEAAkD,uBAAYA,WAAW,KAAvB,YAAlD,iDAAuJ,uBAAYA,WAAW,KAAvB,SAAvJ,gLACA,mBAAG,uBAAYA,WAAW,KAAvB,8BACH,yEACA,mBAAG,uBAAYA,WAAW,KAAvB,+DACH,kDACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,8CAML,mIAAwH,cAAGA,WAAW,IAClI,KAAQ,oBACR,MAAS,UAF2G,2BAAxH,MAQJH,EAAWK,gBAAiB","file":"component---src-pages-guides-getting-started-deploy-md-2801ef9c959045506e4b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-io-runtime/adobe-io-runtime/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"deploying-your-first-adobe-io-runtime-function\"\n    }}>{`Deploying your First Adobe I/O Runtime Function`}</h1>\n    <p>{`Test your installation and configuration of the CLI by creating and deploying your first function. Create the following function in any editor and save it as `}<inlineCode parentName=\"p\">{`hello.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function main(params) {\n  return { payload: 'Hello ' + params.name };\n}\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This is similar to the function used as an example in `}<a parentName=\"p\" {...{\n        \"href\": \"../overview/howitworks.md\",\n        \"title\": \"How it works\"\n      }}>{`How Adobe I/O Runtime Works`}</a>{`, but takes a name as a parameter.`}</p>\n    <p>{`Next, open a command-line window and navigate to the folder where you saved the function. Type the following command to create an action from this function:`}</p>\n    <p><inlineCode parentName=\"p\">{`wsk action create hello hello.js`}</inlineCode></p>\n    <p>{`This command uploads the code contained in `}<inlineCode parentName=\"p\">{`hello.js`}</inlineCode>{` and stores it in Runtime as an action named `}<inlineCode parentName=\"p\">{`hello`}</inlineCode>{`. That`}{`’`}{`s really all there is to it: your function is deployed. If the command is successful, you should see the following acknowledgement in the command-line window:`}</p>\n    <p><inlineCode parentName=\"p\">{`ok: created action hello`}</inlineCode></p>\n    <p>{`Now, to test the function, invoke it as an action:`}</p>\n    <p><inlineCode parentName=\"p\">{`wsk action invoke --result hello --param name <your name>`}</inlineCode></p>\n    <p>{`You should get this output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"payload\": \"Hello <your name>\"\n}\n`}</code></pre>\n    <p>{`That`}{`’`}{`s it! You`}{`’`}{`re ready to begin developing on Adobe I/O Runtime. For ideas on what to next, see `}<a parentName=\"p\" {...{\n        \"href\": \"../using/index.md\",\n        \"title\": \"Guides\"\n      }}>{`Using Adobe I/O Runtime`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
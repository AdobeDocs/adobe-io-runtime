{"version":3,"file":"component---src-pages-guides-reference-triggersrules-md-b00b77e3e0cf8dd07077.js","mappings":"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","sources":["webpack://adobe-io-runtime/./src/pages/guides/reference/triggersrules.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adobe-io-runtime/adobe-io-runtime/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-triggers-and-rules\"\n    }}>{`Using Triggers and Rules`}</h1>\n    <p>{`Invoking an action directly in the CLI is quite limited; what you want to do is configure Adobe I/O Runtime to respond to events. The Runtime features that enable you to do this are triggers and rules:`}</p>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Triggers`}</em>{` are events: each trigger you create represents a particular class of event.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Rules`}</em>{` are associations between triggers and actions. Rules are the way you make Runtime execute code in response to an event.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"about-triggers\"\n    }}>{`About triggers`}</h2>\n    <p>{`Triggers are a way for you to apply a name to a class of events. Some examples:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`updating a user`}{`’`}{`s location on a mobile app`}</li>\n      <li parentName=\"ul\">{`uploading a file to cloud storage`}</li>\n      <li parentName=\"ul\">{`sending an email or text message`}</li>\n    </ul>\n    <p>{`Almost anything can be classified as an event by defining it as a trigger. In Runtime, events are defined by means of a set of key-value pairs; this allows them to be passed to an action as a JSON object. Triggers are used to define the keys for these pairs. When a trigger is activated (`}<em parentName=\"p\">{`fired`}</em>{`), it reads from the event source the values for these keys and passes on a dictionary of key-value pairs that define the event.`}</p>\n    <p>{`You can fire a trigger explicitly in the CLI yourself, but it`}{`’`}{`s much more common for an event source to be configured to fire triggers via a feed. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"feeds.md\",\n        \"title\": \"Using feeds\"\n      }}>{`Using Feeds`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"about-rules\"\n    }}>{`About rules`}</h2>\n    <p>{`Rules link triggers with actions. Each rule links a specific trigger with a single action: every time the trigger is fired, the rule causes the action to be invoked with the trigger`}{`’`}{`s event used as input parameters. By combining rules, however, you can cause a trigger to fire multiple actions, or cause a action to respond to multiple triggers. `}</p>\n    <p>{`For example, consider a mobile app that tracks the user`}{`’`}{`s location when the user takes a photo, records the user`}{`’`}{`s GPS coordinates, and uploads the photo to the user`}{`’`}{`s Adobe Assetsa account, in a library named `}{`“`}{`My Photos`}{`”`}{`. The app also captures images sent or received via text or email and uploads them to the user`}{`’`}{`s Adobe Assets, in another library named `}{`“`}{`Shared with Me`}{`”`}{`. You could configure the following actions:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`catalogImg`}</inlineCode>{`: calls a Sensei Studio function to analyze the image and recognize objects`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mapImg`}</inlineCode>{`: adds metadata to the image to log its GPS coordinates`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`thumbImg`}</inlineCode>{`: creates a thumbnail of an image`}</li>\n    </ul>\n    <p>{`Using the mobile app as an event source, you could set the following triggers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`myPhoto`}</inlineCode>{`: fires when the app uploads a photo taken by the user`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sharedImg`}</inlineCode>{`: fires when the app uploads an image sent or received via email or text message`}</li>\n    </ul>\n    <p>{`To process these images in Runtime, you could set the following rules:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`myPhoto -> catalogImg`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`myPhoto -> mapImg`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`myPhoto -> thumbImg`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sharedImg -> catalogImg`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sharedImg -> thumbImg`}</inlineCode></li>\n    </ul>\n    <p>{`So, with these rules, both images taken by the user and images sent or received via email or text are catalogued and thumbnails are created; for the user`}{`’`}{`s own images only, GPS coordinates are tracked.`}</p>\n    <h2 {...{\n      \"id\": \"creating-and-firing-triggers\"\n    }}>{`Creating and firing triggers`}</h2>\n    <p>{`Creating triggers is easy. Consider a trigger to update a user`}{`’`}{`s location; every time the trigger is fired, it sends the user`}{`’`}{`s name and GPS coordinates. To create the trigger in the CLI:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:trigger:create updateLoc`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`ok: created trigger updateLoc\n`}</code></pre>\n    <p>{`And, just as with packages and actions, you can list the triggers you`}{`’`}{`ve created:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio  rt:trigger:list`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`triggers\n/yourNamespace/updateLoc                                              private\n`}</code></pre>\n    <p>{`That was simple; but then, all you`}{`’`}{`ve really done here is create a label for a channel through which events can be passed to the system. You can fire this trigger just as simply, specifying the parameters:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:trigger:fire updateLoc --param name Jocasta latitude 38.316667 longitude 23.316667`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`ok: triggered updateLoc with id 94dddb5ef8ca46e9ba4648eeb9bda80f\n`}</code></pre>\n    <p>{`So, the trigger has been fired`}{`—`}{`but nothing happened. You haven`}{`’`}{`t set up a rule yet to link this trigger with an action. Triggers that fire with no associated rule have no effect.`}</p>\n    <h2 {...{\n      \"id\": \"creating-and-using-rules\"\n    }}>{`Creating and using rules`}</h2>\n    <p>{`To link your trigger with an action, you need to create a rule. To do so, you need the name of your trigger, the name of the action you`}{`’`}{`re going to execute when the trigger is fired, and a name for your rule itself. `}</p>\n    <p>{`To give your trigger an appropriate action, create an action named `}<inlineCode parentName=\"p\">{`helloLoc`}</inlineCode>{` using the following code. (See `}<a parentName=\"p\" {...{\n        \"href\": \"../gettingstarted/deploy.md\",\n        \"title\": \"Deploying your first function\"\n      }}>{`Deploying your first Adobe I/O Runtime function`}</a>{` for instructions on creating an action):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function main(params) {\n   return {payload:  'Hello, ' + params.name + ', I see you are at latitude ' + params.latitude ', longitude ' + params.longitude };\n}\n`}</code></pre>\n    <p>{`Now you can create the rule linking the trigger to the action:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:rule:create greetLoc updateLoc helloLoc`}</inlineCode></p>\n    <p>{`This creates a rule named `}<inlineCode parentName=\"p\">{`greetLoc`}</inlineCode>{` that executes `}<inlineCode parentName=\"p\">{`helloLoc`}</inlineCode>{` every time the trigger `}<inlineCode parentName=\"p\">{`updateLoc`}</inlineCode>{` is fired. Now, fire the trigger again:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:trigger:fire updateLoc --param name Jocasta latitude 38.316667 longitude 23.316667`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`ok: triggered updateLoc with id 00e0dd4cce3f43768dabb99d67731b50\n`}</code></pre>\n    <p>{`To see what happened as a result, you can check your activations. You can list them easily:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:activation:list`}</inlineCode></p>\n    <p>{`Your `}<inlineCode parentName=\"p\">{`hello`}</inlineCode>{` action should be first on the list. If the list is long, though, you may want to just show the most recent activation:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:activation:list --limit 1 helloLoc`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`activations\na48069e1da3c4aa9bc48ac979c5ee140             helloLoc\n`}</code></pre>\n    <p>{`To see the results of this activation:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:activation:result a48069e1da3c4aa9bc48ac979c5ee140`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    payload: \"Hello, Jocasta, I see you are at latitude 38.316667, longitude 23.316667\"\n}\n`}</code></pre>\n    <p>{`So, the helloLoc action received the parameters from updateLoc and returned the result you`}{`’`}{`d expect.`}</p>\n    <p>{`Finally, to stop a rule, you can disable it:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:rule:disable greetLoc`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"rules-on-triggers-and-rules\"\n    }}>{`Rules on triggers and rules`}</h2>\n    <p>{`Triggers, rules and actions can be combined in different ways: you can associate a trigger with multiple actions by using a different rule for each action, and an action can be the target of multiple triggers, again by creating a rule for each trigger. You cannot, however, link a trigger to more than one action with a single rule, nor can you link more than one trigger to an action with a single rule.`}</p>\n    <p>{`Triggers and rules stand outside packages; you cannot place either in a package. You can, however, create a rule that addresses an action in a package. Suppose the `}<inlineCode parentName=\"p\">{`helloLoc`}</inlineCode>{` action is in a package named `}<inlineCode parentName=\"p\">{`manageLoc`}</inlineCode>{`:`}</p>\n    <p><inlineCode parentName=\"p\">{`aio rt:rule:create greetLoc updateLoc /manageLoc/helloLoc`}</inlineCode></p>\n    <p>{`\\``}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}
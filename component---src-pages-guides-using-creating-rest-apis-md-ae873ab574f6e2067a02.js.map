{"version":3,"file":"component---src-pages-guides-using-creating-rest-apis-md-ae873ab574f6e2067a02.js","mappings":"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","sources":["webpack://adobe-io-runtime/./src/pages/guides/using/creating_rest_apis.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adobe-io-runtime/adobe-io-runtime/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-rest-apis\"\n    }}>{`Creating REST APIs`}</h1>\n    <p>{`You can create REST APIs from web actions you`}{`’`}{`ve deployed to Adobe I/O Runtime. Let`}{`’`}{`s assume that you`}{`’`}{`ve created four actions to manage CRUD operations for the `}<inlineCode parentName=\"p\">{`pet`}</inlineCode>{` entity:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CRUD Operation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action Name`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Read`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`getPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Update`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`updatePet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deletePet`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`You can map these actions to a REST API for managing `}<inlineCode parentName=\"p\">{`pet`}</inlineCode>{` resources:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Endpoint`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTTP Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action Nam`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`POST`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GET`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`getPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet/{id}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GET`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`getPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet/{id}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`PUT`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`updatePet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet/{id}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DELETE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deletePet`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Let`}{`’`}{`s see how you can create this API, assuming you have the web actions are already deployed/created.`}</p>\n    <h1 {...{\n      \"id\": \"how-long-does-it-take-to-createupdate-an-api\"\n    }}>{`How long does it take to create/update an API`}</h1>\n    <p>{`When creating or updating a REST API, it can take up to 5 minutes to see the changes. `}</p>\n    <h2 {...{\n      \"id\": \"using-wsk-cli\"\n    }}>{`Using wsk CLI`}</h2>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`wsk api create`}</inlineCode>{` command, you create each API endpoint one-by-one. This command allows you to set a base path, path, method, and response type. We will set:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`wsk api create /pet-store /pet post createPet --response-type http\nwsk api create /pet-store /pet get getPet --response-type http\nwsk api create /pet-store /pet/{id} get getPet --response-type http\nwsk api create /pet-store /pet/{id} put updatePet --response-type http\nwsk api create /pet-store /pet/{id} delete deletePet --response-type http\n`}</code></pre>\n    <p>{`You can quickly see the API you`}{`’`}{`ve defined, including the fully qualified path, by running this command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`wsk api list /pet-store\n`}</code></pre>\n    <p>{`Please note, that at this time `}<inlineCode parentName=\"p\">{`wsk api list`}</inlineCode>{` is not implemented. Instead, you have to use `}<inlineCode parentName=\"p\">{`wsk api list /enter-base-path`}</inlineCode>{`.`}</p>\n    <p>{`Here is an example of calling one of the endpoints:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl https://adobeioruntime.net:443/apis/<YOUR-NAMESPACE>/pet-store/pet/2345 -X get\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl https://<YOUR-NAMESPACE>.adobeioruntime.net:443/apis/pet-store/pet/2345 -X GET\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note`}</strong>{` the change in the URL here in comparison to what the `}<inlineCode parentName=\"p\">{`wsk`}</inlineCode>{` returns. This is due some additional protections Runtime provides to segregate namespaces from each other when invoking web actions. The `}<inlineCode parentName=\"p\">{`wsk`}</inlineCode>{` generated link will still work but it will return a 308 redirect to your namespace's subdomain on Runtime. For a further discussion of this please see the `}<a parentName=\"p\" {...{\n        \"href\": \"securing_web_actions.md\"\n      }}>{`Securing Web Actions`}</a>{` page.`}</p>\n    <p>{`In the example above, the `}<inlineCode parentName=\"p\">{`{di}`}</inlineCode>{` value, 2335, will be mapped to a {payload.id}.`}</p>\n    <h2 {...{\n      \"id\": \"using-swagger-files\"\n    }}>{`Using Swagger files`}</h2>\n    <p>{`A neat feature when working with REST APIs is the support for Swagger files. This works for creating a new REST API from scratch or, if you already used the `}<inlineCode parentName=\"p\">{`wsk`}</inlineCode>{` CLI to create one,  saving the API as a Swagger definition file that you can use later on to restore the API.`}</p>\n    <p>{`Continuing the example above, if you run this command, you`}{`’`}{`ll create a Swagger definition file on your machine out of the pet-store API:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`wsk api get /pet-store > pet-store-swagger.json\n`}</code></pre>\n    <p>{`Suppose that you want to restore or create the same API, maybe in some other namespace. All you have to is to run:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`wsk api create --config-file pet-store-swagger.json\n`}</code></pre>\n    <p>{`This will work as long as the actions are already created in that namespace.`}</p>\n    <h2 {...{\n      \"id\": \"enable-cors-on-an-http-resource\"\n    }}>{`Enable CORS on an HTTP Resource`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\"\n      }}>{`CORS`}</a>{` headers can be controlled in two ways: statically, or dynamically.`}</p>\n    <h3 {...{\n      \"id\": \"static-cors-response-with-openapi\"\n    }}>{`Static CORS Response with OpenAPI`}</h3>\n    <p>{`If the returned CORS headers can be static, no code is necesary. The REST APIs can be configured in OpenAPI 2.0 format, by defining the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` method. The following snippet illustrates how to configure CORS headers:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"paths\": {\n    \"/test\": {\n      \"options\": {\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Default CORS response\",\n            \"headers\": {\n              \"Access-Control-Allow-Origin\": {\n                \"type\": \"string\",\n                \"description\": \"Which origin can invoke the /test API\\\\n\",\n                \"default\": \"https://xyz.example.com\"\n              },\n              \"Access-Control-Allow-Methods\": {\n                \"type\": \"string\",\n                \"description\": \"Which methods are allowed\\\\n\",\n                \"default\": \"GET, POST, PUT\"\n              }\n            }\n          }\n        }\n      }\n    }\n}\n`}</code></pre>\n    <p>{`Once the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` block is added to any HTTP resource, the system will respond with the configured headers, and their corresponding `}<inlineCode parentName=\"p\">{`default`}</inlineCode>{` values. In this example the response will be:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` HTTP/1.1 204 No Content\n Access-Control-Allow-Methods: GET, POST, PUT\n Access-Control-Allow-Origin: https://xyz.example.com\n\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"dynamic-cors-response-with-custom-actions\"\n    }}>{`Dynamic CORS Response with Custom Actions`}</h4>\n    <p>{`The CORS headers can also be returned by a dedicated function, which must be configured to handle the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` HTTP Method. It works in the same fashion as the other HTTP Methods like `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{`.`}</p>\n    <p>{`The code bellow demonstrates an action that returns a CORS response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// save it as cors-action.js\nfunction main(params) {\n  return {\n    statusCode: 204,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"https://xyz.example.com\",\n      \"Access-Control-Allow-Methods\": \"GET, POST, PUT\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The web action must be created and configured for the CORS request:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`wsk action create handleCorsRequest ./cors-action.js --web true -a web-custom-options true\n\nwsk api create /pet-store /pet options handleCorsRequest --response-type http\n`}</code></pre>\n    <p>{`To test the CORS request get the URL of the action, and invoke it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`wsk api list /pet-store\n# get the URL for the options action and invoke it\ncurl -i -X OPTIONS https://adobeioruntime.net/...\n# it should return\n HTTP/1.1 204 No Content\n Access-Control-Allow-Methods: GET, POST, PUT\n Access-Control-Allow-Origin: https://xyz.example.com\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"securing-the-api-endpoints\"\n    }}>{`Securing the API endpoints`}</h2>\n    <h3 {...{\n      \"id\": \"oauth-using-the-adobe-identity-management-system\"\n    }}>{`Oauth (using the Adobe Identity Management System)`}</h3>\n    <p>{`An action can be configured to require IMS validation for incoming requests using the following command: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`wsk action create <action_name> --web true -a require-gw-validation true\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"scopes-validation\"\n    }}>{`Scopes validation`}</h4>\n    <p>{`Once IMS authentication has been enabled for an action, the only way to allow access to the action is by specifying a list of IMS scopes or client IDs that are permitted to invoke the action. `}</p>\n    <p>{`The following code snippet demonstrates how to configure access using a standard Swagger file and the `}<inlineCode parentName=\"p\">{`security`}</inlineCode>{` object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"basePath\": \"/v2\",\n    \"paths\": {\n      \"/ims-secure-endpoint\": {\n        \"get\": {\n          \"operationId\": \"your-namespaces/default/my-ims-secure-web-action.json\",        \n          \"security\": [\n            {\n              \"scopes_auth\": [\n                  \"write:pets\",\n                  \"read:pets\"\n                ]\n            }\n          ]\n        }\n      }\n    },\n    \"securityDefinitions\": {\n        \"scopes_auth\": {\n          \"type\": \"oauth2\",\n          \"authorizationUrl\": \"\",\n          \"flow\": \"implicit\",\n          \"scopes\": {\n            \"write:pets\": \"modify pets in your account\",\n            \"read:pets\": \"read your pets\"\n          }\n        }\n    }\n}\n`}</code></pre>\n    <p>{`This enables scope validation for the API endpoint, allowing requests with access tokens that have the scopes `}<inlineCode parentName=\"p\">{`write:pets`}</inlineCode>{` OR `}<inlineCode parentName=\"p\">{`read:pets`}</inlineCode>{`. Requests that do not have the required scopes in the access token will be rejected with the following error message: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"401015\",\n  \"message\":\"Scope mismatch\"\n}\n`}</code></pre>\n    <p>{`After publishing the Swagger file, this endpoint `}<inlineCode parentName=\"p\">{`your-namespaces/default/my-require-gw-validation-web-action`}</inlineCode>{` can be used to call the action: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -i -H \"Authorization: Bearer <ims_access_token>\" https://guest.adobeioruntime.net/api/v2/ims-validation-endpoint\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"client-id-validation\"\n    }}>{`Client ID validation`}</h4>\n    <p><inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` validation can be enabled by adding `}<inlineCode parentName=\"p\">{`x-client-ids`}</inlineCode>{` with a list of clients that are allowed to invoke the action. The clientId list has to be added to the `}<inlineCode parentName=\"p\">{`security definition`}</inlineCode>{` object in the Swagger. Also make sure to add the security definition key to the method `}<inlineCode parentName=\"p\">{`security`}</inlineCode>{` object, otherwise the validation won't be enabled for that method: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"basePath\": \"/v2\",\n    \"paths\": {\n      \"/ims-validation-endpoint\": {\n        \"get\": {\n          \"operationId\": \"your-namespaces/default/my-require-gw-validation-web-action.json\",\n          \"security\": [\n            {\n              \"clientids_auth\": []\n            }\n          ]\n        }\n      }\n    },\n    \"securityDefinitions\": {\n        \"clientids_auth\": {\n          \"type\": \"oauth2\",\n          \"authorizationUrl\": \"\",\n          \"flow\": \"implicit\",\n          \"scopes\": {\n            \"write:pets\": \"modify pets in your account\",\n            \"read:pets\": \"read your pets\"\n          },\n          \"x-client-ids\": [\"zookeeper\", \"dogwalker\"]\n        }\n    }\n}\n`}</code></pre>\n    <p>{`This configuration allows the action to accept requests with access tokens that have the client IDs `}<inlineCode parentName=\"p\">{`zookeeper`}</inlineCode>{` OR `}<inlineCode parentName=\"p\">{`dogwalker`}</inlineCode>{`. Requests that do not have the client ID in the access token will be rejected with the following error message: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"403201\",\n  \"message\":\"Client ID not allowed to call this service\"\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note that both `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` validation can be enabled at the same time. In this case, the request will be rejected if the access token does not have the required scope AND client ID.`}</p>\n      <p parentName=\"blockquote\">{`In case no validation is enabled for the endpoint's verb, by removing the `}<inlineCode parentName=\"p\">{`security`}</inlineCode>{` object from the method definition, the action can be invoked publicly without any restrictions on the API url.`}</p>\n      <p parentName=\"blockquote\">{`By default, the IMS token validation URL will be used for token validation so \"authorizationUrl\" can be left empty. However, if you want to use a different Oauth provider, you can specify the `}<inlineCode parentName=\"p\">{`authorizationUrl`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`securityDefinition`}</inlineCode>{` object. Only one external security provider can be configured, and it needs to be defined in the first `}<inlineCode parentName=\"p\">{`securityDefinition`}</inlineCode>{` object in the Swagger file.`}</p>\n      <p parentName=\"blockquote\">{`Please allow a 5minute window for the changes to take effect.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"basic-authentication\"\n    }}>{`Basic Authentication`}</h3>\n    <p>{`You secure an API the same way you`}{`’`}{`d do it for web actions. You can read more about this on the `}<a parentName=\"p\" {...{\n        \"href\": \"securing_web_actions.md\"\n      }}>{`Securing Web Actions`}</a>{` page.`}</p>\n    <p>{`Once you`}{`’`}{`ve enabled basic authentication for an action, you`}{`’`}{`d have to pass the `}<inlineCode parentName=\"p\">{`X-Require-Whisk-Auth`}</inlineCode>{` header and the secret you chose when making an API call.`}</p>\n    <h3 {...{\n      \"id\": \"ip-allow-list--disallow-list\"\n    }}>{`IP Allow-list / Disallow-list`}</h3>\n    <p>{`Endpoints can also be configured to only allow/block requests from specific IP addresses. This can be done by adding the `}<inlineCode parentName=\"p\">{`x-ip-allowlist`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`x-ip-disallowlist`}</inlineCode>{` to the method definition as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"basePath\": \"/v2\",\n    \"paths\": {\n      \"/ip-validation-endpoint\": {\n        \"get\": {\n          \"operationId\": \"your-namespaces/default/my-require-gw-validation-web-action.json\",\n          \"x-ip-allowlist\": [\"192.150.10.210\", \"192.168.0.1\"],\n          \"x-ip-disallowlist\": [\"192.150.10.10\"]\n        }\n      }\n    }\n}\n`}</code></pre>\n    <p>{`This configuration allows the action to accept requests from clients with the IP addresses \"192.150.10.210\" or \"192.168.0.1\", and block requests from \"192.150.10.10\". `}</p>\n    <p>{`Requests that do not have the requests originating from the IP addresses in the whitelist will be rejected with the following error message:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"403013\",\n  \"message\":\"Access from your IP address is not authorized\"\n}\n`}</code></pre>\n    <p>{`Requests that have the requests originating from the IP addresses in the disallow list, will be rejected with the following error message:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"403012\",\n  \"message\":\"Access from your IP address is not authorized\"\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Make sure that the `}<inlineCode parentName=\"p\">{`my-require-gw-validation-web-action`}</inlineCode>{` is configured to be a web action with `}<inlineCode parentName=\"p\">{`-a require-gw-validation true`}</inlineCode>{`, otherwise the action can be accessed publicly without any restrictions on the non api url. `}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}